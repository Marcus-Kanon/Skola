@using Test_matsidaBlazor.Data
@using Test_matsidaBlazor.Data.Models
@inject Blazored.LocalStorage.ILocalStorageService _LocalStorage
<h3>Inventory</h3>

<span>@Message</span>

@foreach(var item in Items)
{
    <InventoryItem Ingredient="@item" />
}

<span>
</span>

<button @onclick="ClearSession">Clear Sesssion</button><br />


@code {
    public LoginTracker? Tracker { get; set; }
    public bool LoggedIn { get; set; } = false;
    public string Message { get; set; } = "";
    public List<Ingredient> Items = new List<Ingredient>();
    public int InventoryId { get; set; } = 0;

    CrudStuff crud = CrudStuff.GetInstance();

    protected override async Task OnInitializedAsync()
    {
        Tracker = await _LocalStorage.GetItemAsync<LoginTracker>("LoginTracker");

        LoadInventory();

        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        LoadInventory();

        StateHasChanged();

        base.OnParametersSet();
    }

    public void LoadInventory()
    {
        if(crud.CheckValidTracker(Tracker))
        {
            Message = "Hej " + Tracker.Username + "!";
            Items = crud.GetIngredientsInInventory(Tracker, InventoryId);
        }
        else
        {
            Items = new List<Ingredient>();
            Message = "Not logged in";
        }
    }

    public void ClearSession()
    {
        _LocalStorage.ClearAsync();
        Tracker = null;
        LoadInventory();

        StateHasChanged();
    }
}
